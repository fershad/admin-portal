# Generated by Django 3.2 on 2021-07-08 13:40

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('accounts', '0018_datacenternote_hostingprovidernote'),
    ]

    operations = [
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Label',
                'verbose_name_plural': 'Labels',
            },
        ),
        migrations.AlterField(
            model_name='hostingprovider',
            name='services',
            field=taggit.managers.TaggableManager(blank=True, help_text='Click the services that your organisation offers. These will be listed in the green web directory.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Services Offered'),
        ),
        migrations.CreateModel(
            name='ProviderLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labels', related_query_name='label', to='accounts.hostingprovider')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts_providerlabel_items', to='accounts.label')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='hostingprovider',
            name='staff_labels',
            field=taggit.managers.TaggableManager(blank=True, help_text=('Labels to apply to providers to make it easier to flag for follow up by staff or other categorisation to support internal admin. Internally facing.',), related_name='labels', through='accounts.ProviderLabel', to='accounts.Label', verbose_name='Staff labels'),
        ),
    ]
